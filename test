CREATE DATABASE lifestylesante_db;
CREATE USER lifestylesante_user WITH PASSWORD 'lifestyle@2024';
GRANT ALL PRIVILEGES ON DATABASE lifestylesante_db TO lifestylesante_user;

SELECT grantee, privilege_type FROM information_schema.role_table_grants WHERE table_schema = 'public' AND grantee = 'lifestylesante_user';

GRANT USAGE ON SCHEMA public TO lifestylesante_user;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO lifestylesante_user;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO lifestylesante_user;


CREATE USER user_lifestylesante WITH ENCRYPTED PASSWORD 'lifestylesante@2024';
GRANT ALL PRIVILEGES ON DATABASE lifestylesante_db TO user_lifestylesante;
GRANT USAGE ON SCHEMA public TO user_lifestylesante;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO user_lifestylesante;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO user_lifestylesante;

SELECT grantee, privilege_type FROM information_schema.role_table_grants WHERE table_schema = 'public' AND grantee = 'user_lifestylesante';

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'lifestylesante_db',
        'USER': 'lifestylesante_user',
        'PASSWORD': 'lifestyle@2024',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}




ALTER ROLE debian SET client_encoding TO 'utf8';
ALTER ROLE debian SET default_transaction_isolation TO 'read committed';
ALTER ROLE debian SET timezone TO 'Africa/Brazzaville';

GRANT ALL PRIVILEGES ON DATABASE lifestylesante_db TO debian;


-- Supprimer une base de donnee

-- Déconnecter les utilisateurs de la base de données

REVOKE CONNECT ON DATABASE lifestylesante_db FROM public;
SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'lifestylesante_db';

-- Supprimer la base de données
DROP DATABASE lifestylesante_db;

-- Creer une nouvelle base de donnee
CREATE DATABASE lifestylesante_db;
