version: '3'
services:
  backend:
    build: .
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && gunicorn --config gunicorn_config.py main.wsgi:application"
    restart: always
    expose:
      - "8000"
    volumes:
      - ./:/app
      - /var/www/static/:/var/www/static/
      - /var/www/medias/:/var/www/medias/
      - /var/certbot/conf:/etc/letsencrypt/:ro
    env_file:
      - .env
    networks:
      - webnet

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/static/:/var/www/static/
      - /var/www/medias/:/var/www/medias/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - backend
    networks:
      - webnet

  certbot:
    image: certbot/certbot:latest
    volumes:
      - /var/certbot/conf:/etc/letsencrypt/:rw
      - /var/certbot/www/:/var/www/certbot/:rw
    depends_on:
      - nginx
    networks:
      - webnet

  db:
    image: mysql:8.0  
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}  # Nom de la base de données
      MYSQL_USER: ${MYSQL_USER}  # Utilisateur MySQL
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}  # Mot de passe MySQL
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  # Mot de passe root
    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql:/var/lib/mysql  # Stocker les données dans un volume persistant
    networks:
      - webnet

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db  
    networks:
      - webnet

networks:
  webnet:

